# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calendrier_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QApplication, QListWidgetItem, QMessageBox
from menu import Ui_MainWindow
import mysql.connector



tasks=["rdv1","rdv2","rdv3","rdv4","rdv5","rdv6"]
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(907, 703)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.head = QtWidgets.QFrame(Form)
        self.head.setMinimumSize(QtCore.QSize(100, 100))
        self.head.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.head.setFrameShadow(QtWidgets.QFrame.Raised)
        self.head.setObjectName("head")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.head)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(5)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.titre = QtWidgets.QLabel(self.head)
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(20)
        self.titre.setFont(font)
        self.titre.setStyleSheet("background-color: rgb(0, 178, 238);\n"
    "color: rgb(255, 255, 255);")

        self.titre.setAlignment(QtCore.Qt.AlignCenter)
        self.titre.setObjectName("titre")
        self.verticalLayout_2.addWidget(self.titre)
        self.verticalLayout.addWidget(self.head, 0, QtCore.Qt.AlignTop)
        self.main = QtWidgets.QFrame(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main.sizePolicy().hasHeightForWidth())
        self.main.setSizePolicy(sizePolicy)
        self.main.setMinimumSize(QtCore.QSize(400, 400))
        self.main.setAcceptDrops(False)
        self.main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main.setObjectName("main")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.main)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.calendrier = QtWidgets.QFrame(self.main)
        self.calendrier.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.calendrier.setFrameShadow(QtWidgets.QFrame.Raised)
        self.calendrier.setObjectName("calendrier")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.calendrier)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.calen = QtWidgets.QCalendarWidget(self.calendrier)
        self.calen.setObjectName("calen")
        self.horizontalLayout_2.addWidget(self.calen)
        self.horizontalLayout.addWidget(self.calendrier)
        self.frame_main = QtWidgets.QFrame(self.main)
        self.frame_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_main.setObjectName("frame_main")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_main)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.addButton = QtWidgets.QPushButton(self.frame_main)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.addButton.setFont(font)
        self.addButton.setStyleSheet("color: rgb(0, 178, 238);")
        self.addButton.setObjectName("addButton")
        self.verticalLayout_3.addWidget(self.addButton, 0, QtCore.Qt.AlignRight)
        self.taskLineEdit = QtWidgets.QLineEdit(self.frame_main)
        self.taskLineEdit.setObjectName("taskLineEdit")
        self.verticalLayout_3.addWidget(self.taskLineEdit)
        self.listedesrdv = QtWidgets.QListWidget(self.frame_main)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listedesrdv.sizePolicy().hasHeightForWidth())
        self.listedesrdv.setSizePolicy(sizePolicy)
        self.listedesrdv.setMinimumSize(QtCore.QSize(100, 100))
        self.listedesrdv.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.listedesrdv.setAutoFillBackground(False)
        self.listedesrdv.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.listedesrdv.setAutoScrollMargin(0)
        self.listedesrdv.setDragEnabled(False)
        self.listedesrdv.setDragDropOverwriteMode(False)
        self.listedesrdv.setAlternatingRowColors(True)
        self.listedesrdv.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.listedesrdv.setProperty("isWrapping", False)
        self.listedesrdv.setResizeMode(QtWidgets.QListView.Adjust)
        self.listedesrdv.setLayoutMode(QtWidgets.QListView.SinglePass)
        self.listedesrdv.setGridSize(QtCore.QSize(100, 500))
        self.listedesrdv.setBatchSize(100)
        self.listedesrdv.setObjectName("listedesrdv")
        self.verticalLayout_3.addWidget(self.listedesrdv)
        self.saveButton = QtWidgets.QPushButton(self.frame_main)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.saveButton.setFont(font)
        self.saveButton.setStyleSheet("color: rgb(0, 178, 238);")
        self.saveButton.setObjectName("saveButton")
        self.verticalLayout_3.addWidget(self.saveButton) 
        self.horizontalLayout.addWidget(self.frame_main)
        self.verticalLayout.addWidget(self.main)
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        
    


    
        #connexion avec base de donn√©es 
        self.db = mysql.connector.connect(
            host="localhost",
            user="root",
            password="",
            database="donnespatient"
        )    

    def calendarDateChanged(self):
        print("The calendar date was changed.")
        dateSelected = self.calen.selectedDate().toPyDate()
        print("Date selected:", dateSelected)
        self.updateTaskList(dateSelected) 
    def updateTaskList(self, date):
        self.listedesrdv.clear()

        cursor = self.db.cursor()

        query = "SELECT task, completed FROM tasks WHERE date = %s"
        row = (date,)
        cursor.execute(query, row)
        results = cursor.fetchall()
        for result in results:
            item = QListWidgetItem(str(result[0]))
            item.setFlags(item.flags() | QtCore.Qt.ItemIsUserCheckable)
            if result[1] == "YES":
                item.setCheckState(QtCore.Qt.Checked)
            elif result[1] == "NO":
                item.setCheckState(QtCore.Qt.Unchecked)
            self.listedesrdv.addItem(item)
    def saveChanges(self):
        cursor = self.db.cursor()
        date = self.calen.selectedDate().toPyDate()

        for i in range(self.listedesrdv.count()):
            item = self.listedesrdv.item(i)
            task = item.text()
            if item.checkState() == QtCore.Qt.Checked:
                query = "UPDATE tasks SET completed = 'YES' WHERE task = %s AND date = %s"
            else:
                query = "UPDATE tasks SET completed = 'NO' WHERE task = %s AND date = %s"
            row = (task, date,)
            cursor.execute(query, row)
        self.db.commit()

        messageBox = QMessageBox()
        messageBox.setText("Changes saved.")
        messageBox.setStandardButtons(QMessageBox.Ok)
        messageBox.exec()
    def addNewTask(self):
        cursor = self.db.cursor()
        newTask = str(self.taskLineEdit.text())

        date = self.calen.selectedDate().toPyDate()

        query = "INSERT INTO tasks(task, completed, date) VALUES (%s,%s,%s)"
        row = (newTask, "NO", date,)

        cursor.execute(query, row)
        self.db.commit()
        self.updateTaskList(date)
        self.taskLineEdit.clear()
    
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.titre.setText(_translate("Form", "Calendrier de planning des RENDEZ-VOUS"))
        self.addButton.setText(_translate("Form", "Ajouter"))
        self.listedesrdv.setSortingEnabled(False)
        self.saveButton.setText(_translate("Form", "enregistrer les modifications"))
        #connecter les boutons au fonctions pour affecter les operations d'ajout et d'enregistrement
        self.calen.selectionChanged.connect(self.calendarDateChanged)
        self.addButton.clicked.connect(self.addNewTask)
        self.saveButton.clicked.connect(self.saveChanges)
import icon_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
